; extensions.conf - the Asterisk dial plan
;
; Static extension configuration file, used by
; the pbx_config module. This is where you configure all your
; inbound and outbound calls in Asterisk.
;
; This configuration file is reloaded
; - With the "dialplan reload" command in the CLI
; - With the "reload" command (that reloads everything) in the CLI
;  Asterisk dial plan Azure bot  Application
;  This dial plan application interacts with Azure bot  API via UniMRCP server.
;   * Revision: 1
;   * Date: May 5, 2021
;   * Vendor: Universal Speech Solutions LLC

;================================UNIMRCPAZUREBOT=============================
exten=>764,1,Goto(synthandrecog-azurebot-activity-payload,s,1)
exten=>765,1,Goto(synthandrecog-azurebot-activity,s,1)
;================================UNIMRCPAZUREBOT=============================


[synthandrecog-azurebot-activity-payload]

exten => s,1,Answer

exten => s,2,Set(PROMPT="Welcome ")

exten => s,3,Set(METHOD="send-activity")

exten => s,4,Set(PAYLOAD=si)

exten => s,5,Set(GRAMMAR="builtin:speech/transcribe?tag-format=semantics/json\;method=${METHOD}")

exten => s,6,ExecIf($["${PAYLOAD}" != ""]?Set(GRAMMAR="builtin:speech/transcribe?tag-format=semantics/json\;method=${METHOD}\;payload-text=Trigger Event|${PAYLOAD}"))

exten => s,7,SynthAndRecog("${PROMPT}","${GRAMMAR}",plt=1&nif=json&b=1&sct=1000&sint=15000&nit=10000,spl=it-IT&p=azurebot)

exten => s,8,Verbose(1, status: ${RECOG_STATUS}, completion-cause: ${RECOG_COMPLETION_CAUSE}, result: ${RECOG_RESULT})

exten => s,9,GotoIf($["${RECOG_STATUS}" = "OK"]?10:17)

exten => s,10,GotoIf($$[["${RECOG_COMPLETION_CAUSE}" = "000" ]|$[ "${RECOG_COMPLETION_CAUSE}" = "001"]|$["${RECOG_COMPLETION_CAUSE}" = "002"]]?11:17)

exten => s,11,Verbose(1, confidence: ${RECOG_CONFIDENCE(0)}, grammar: ${RECOG_GRAMMAR(0)}, input: ${RECOG_INPUT(0)}, instance: ${RECOG_INSTANCE(0/0)})

exten => s,12,Verbose(1, got next prompt: ${RECOG_INSTANCE(0/0/text)})

exten => s,13,Set(PROMPT=${RECOG_INSTANCE(0/0/text)}); use speak for ssml

exten => s,14,Set(METHOD="listen")

exten => s,15,Set(PAYLOAD="") 

exten => s,16,Goto(5)

exten => s,17,MRCPSynth(Thank you. See you next time!)

exten => s,18,Hangup



[synthandrecog-azurebot-activity]

exten => s,1,Answer

exten => s,2,Set(PROMPT="Welcome ")

exten => s,3,Set(METHOD="listen")

exten => s,4,SynthAndRecog("${PROMPT}","builtin:speech/transcribe?tag-format=semantics/json\;method=${METHOD}",plt=1&nif=json&b=1&sct=1000&sint=15000&nit=10000,spl=it-IT&p=azurebot)

exten => s,5,Verbose(1, status: ${RECOG_STATUS}, completion-cause: ${RECOG_COMPLETION_CAUSE}, result: ${RECOG_RESULT})

exten => s,6,GotoIf($["${RECOG_STATUS}" = "OK"]?7:11)

exten => s,7,GotoIf($$[["${RECOG_COMPLETION_CAUSE}" = "000" ]|$[ "${RECOG_COMPLETION_CAUSE}" = "001"]|$["${RECOG_COMPLETION_CAUSE}" = "002"]]?8:11)

exten => s,8,Verbose(1, confidence: ${RECOG_CONFIDENCE(0)}, grammar: ${RECOG_GRAMMAR(0)}, input: ${RECOG_INPUT(0)}, instance: ${RECOG_INSTANCE(0/0)})

exten => s,9,Verbose(1, got next prompt: ${RECOG_INSTANCE(0/0/text)})

exten => s,10,Set(PROMPT=${RECOG_INSTANCE(0/0/text)}) use speak for ssml

exten => s,11,Goto(4)

exten => s,12,MRCPSynth(Thank you. See you next time!)

exten => s,13,Hangup

;================================UNIMRCPAZUREBOT==============================

